goog.require('Blockly');
goog.provide('BlocklyModule');

// Fix goog.Timer
// goog.global is set to the window object in most places where the closure
// library is used, but since we build under webpack that is not the case for
// us. goog.Timer.defaultTimerObject defaults to goog.global, but we need to
// manually set it to the window object so that it has setTimeout, setInterval,
// etc.
goog.require('goog.Timer');
goog.Timer.defaultTimerObject = window;

module.exports = Blockly;

goog.exportProperty(Blockly, 'ALIGN', Blockly.ALIGN);
goog.exportProperty(Blockly, 'assetUrl', Blockly.assetUrl);
goog.exportProperty(Blockly, 'bindEvent_', Blockly.bindEvent_);
goog.exportProperty(Blockly, 'Block', Blockly.Block);
goog.exportProperty(Blockly.Block, 'createProcedureDefinitionBlock', Blockly.Block.createProcedureDefinitionBlock);
goog.exportProperty(Blockly, 'Blocks', Blockly.Blocks);
goog.exportProperty(Blockly, 'BlockSpace', Blockly.BlockSpace);
goog.exportProperty(Blockly.BlockSpace, 'EVENTS', Blockly.BlockSpace.EVENTS);
goog.exportProperty(Blockly.BlockSpace.EVENTS, 'RUN', Blockly.BlockSpace.EVENTS.RUN);
goog.exportProperty(Blockly.BlockSpace, 'createReadOnlyBlockSpace', Blockly.BlockSpace.createReadOnlyBlockSpace);
goog.exportProperty(Blockly.BlockSpace, 'onMainBlockSpaceCreated', Blockly.BlockSpace.onMainBlockSpaceCreated);
goog.exportProperty(Blockly, 'BlockSvg', Blockly.BlockSvg);
goog.exportProperty(Blockly.BlockSvg, 'NOTCH', Blockly.BlockSvg.NOTCH);
goog.exportProperty(Blockly, 'bounce', Blockly.bounce);
goog.exportProperty(Blockly, 'BROKEN', Blockly.BROKEN);
goog.exportProperty(Blockly, 'BUMP', Blockly.BUMP);
goog.exportProperty(Blockly, 'calc', Blockly.calc);
goog.exportProperty(Blockly, 'common', Blockly.common);
goog.exportProperty(Blockly, 'Connection', Blockly.Connection);
goog.exportProperty(Blockly.Connection, 'NOTCH', Blockly.Connection.NOTCH);
goog.exportProperty(Blockly, 'craft', Blockly.craft);
goog.exportProperty(Blockly, 'createSvgElement', Blockly.createSvgElement);
goog.exportProperty(Blockly, 'Css', Blockly.Css);
goog.exportProperty(Blockly.Css, 'inject', Blockly.Css.inject);
goog.exportProperty(Blockly, 'eval', Blockly.eval);
goog.exportProperty(Blockly, 'FieldAngleDropdown', Blockly.FieldAngleDropdown);
goog.exportProperty(Blockly, 'FieldAngleTextInput', Blockly.FieldAngleTextInput);
goog.exportProperty(Blockly, 'FieldButton', Blockly.FieldButton);
goog.exportProperty(Blockly, 'FieldColour', Blockly.FieldColour);
goog.exportProperty(Blockly.FieldColour, 'COLOURS', Blockly.FieldColour.COLOURS);
goog.exportProperty(Blockly.FieldColour, 'COLUMNS', Blockly.FieldColour.COLUMNS);
goog.exportProperty(Blockly, 'FieldColourDropdown', Blockly.FieldColourDropdown);
goog.exportProperty(Blockly, 'FieldDropdown', Blockly.FieldDropdown);
goog.exportProperty(Blockly, 'FieldIcon', Blockly.FieldIcon);
goog.exportProperty(Blockly, 'FieldImage', Blockly.FieldImage);
goog.exportProperty(Blockly, 'FieldImageDropdown', Blockly.FieldImageDropdown);
goog.exportProperty(Blockly, 'FieldLabel', Blockly.FieldLabel);
goog.exportProperty(Blockly, 'FieldTextInput', Blockly.FieldTextInput);
goog.exportProperty(Blockly.FieldTextInput, 'nonnegativeIntegerValidator', Blockly.FieldTextInput.nonnegativeIntegerValidator);
goog.exportProperty(Blockly.FieldTextInput, 'numberValidator', Blockly.FieldTextInput.numberValidator);
goog.exportProperty(Blockly, 'FieldVariable', Blockly.FieldVariable);
goog.exportProperty(Blockly, 'findEmptyContainerBlock', Blockly.findEmptyContainerBlock);
goog.exportProperty(Blockly, 'fireUiEvent', Blockly.fireUiEvent);
goog.exportProperty(Blockly, 'fireUIEvent', Blockly.fireUIEvent);
goog.exportProperty(Blockly, 'Flyout', Blockly.Flyout);
goog.exportProperty(Blockly.Flyout, 'configure', Blockly.Flyout.configure);
goog.exportProperty(Blockly, 'FunctionalBlockUtils', Blockly.FunctionalBlockUtils);
goog.exportProperty(Blockly.FunctionalBlockUtils, 'initTitledFunctionalBlock', Blockly.FunctionalBlockUtils.initTitledFunctionalBlock);
goog.exportProperty(Blockly.FunctionalBlockUtils, 'installStringPicker', Blockly.FunctionalBlockUtils.installStringPicker);
goog.exportProperty(Blockly, 'FunctionalTypeColors', Blockly.FunctionalTypeColors);
goog.exportProperty(Blockly, 'FunctionEditor', Blockly.FunctionEditor);
goog.exportProperty(Blockly, 'gamelab', Blockly.gamelab);
goog.exportProperty(Blockly, 'Generator', Blockly.Generator);
goog.exportProperty(Blockly.Generator, 'blockSpaceToCode', Blockly.Generator.blockSpaceToCode);
goog.exportProperty(Blockly.Generator.blockSpaceToCode, 'bind', Blockly.Generator.blockSpaceToCode.bind);
goog.exportProperty(Blockly.Generator, 'blocksToCode', Blockly.Generator.blocksToCode);
goog.exportProperty(Blockly.Generator, 'get', Blockly.Generator.get);
goog.exportProperty(Blockly.Generator, 'NAME', Blockly.Generator.NAME);
goog.exportProperty(Blockly.Generator, 'prefixLines', Blockly.Generator.prefixLines);
goog.exportProperty(Blockly.Generator, 'xmlToBlocks', Blockly.Generator.xmlToBlocks);
goog.exportProperty(Blockly.Generator, 'xmlToCode', Blockly.Generator.xmlToCode);
goog.exportProperty(Blockly, 'getMainWorkspace', Blockly.getMainWorkspace);
goog.exportProperty(Blockly, 'getRelativeXY', Blockly.getRelativeXY);
goog.exportProperty(Blockly, 'HSV', Blockly.HSV);
goog.exportProperty(Blockly, 'inject', Blockly.inject);
goog.exportProperty(Blockly, 'Input', Blockly.Input);
goog.exportProperty(Blockly, 'INPUT', Blockly.INPUT);
goog.exportProperty(Blockly, 'jigsaw', Blockly.jigsaw);
goog.exportProperty(Blockly, 'js', Blockly.js);
goog.exportProperty(Blockly.Msg, 'CONTROLS', Blockly.Msg.CONTROLS);
goog.exportProperty(Blockly.Msg, 'FUNCTION', Blockly.Msg.FUNCTION);
goog.exportProperty(Blockly.Msg, 'LOGIC', Blockly.Msg.LOGIC);
goog.exportProperty(Blockly.Msg, 'MATH', Blockly.Msg.MATH);
goog.exportProperty(Blockly.Msg, 'VARIABLES', Blockly.Msg.VARIABLES);
goog.exportProperty(Blockly, 'Names', Blockly.Names);
goog.exportProperty(Blockly.Names, 'equals', Blockly.Names.equals);
goog.exportProperty(Blockly, 'Procedures', Blockly.Procedures);
goog.exportProperty(Blockly.Procedures, 'DEFINITION', Blockly.Procedures.DEFINITION);
goog.exportProperty(Blockly.Procedures, 'DEFINITION_BLOCK_TYPES', Blockly.Procedures.DEFINITION_BLOCK_TYPES);
goog.exportProperty(Blockly.Procedures, 'getDefinition', Blockly.Procedures.getDefinition);
goog.exportProperty(Blockly.Procedures, 'NAME', Blockly.Procedures.NAME);
goog.exportProperty(Blockly, 'removeChangeListener', Blockly.removeChangeListener);
goog.exportProperty(Blockly, 'RTL', Blockly.RTL);
goog.exportProperty(Blockly, 'SNAP', Blockly.SNAP);
goog.exportProperty(Blockly, 'SVG', Blockly.SVG);
goog.exportProperty(Blockly, 'Variables', Blockly.Variables);
goog.exportProperty(Blockly.Variables, 'allVariablesFromBlock', Blockly.Variables.allVariablesFromBlock);
goog.exportProperty(Blockly.Variables, 'generateUniqueName', Blockly.Variables.generateUniqueName);
goog.exportProperty(Blockly.Variables, 'getVars', Blockly.Variables.getVars);
goog.exportProperty(Blockly.Variables.getVars, 'bind', Blockly.Variables.getVars.bind);
goog.exportProperty(Blockly.Variables, 'NAME', Blockly.Variables.NAME);
goog.exportProperty(Blockly.Variables, 'registerGetter', Blockly.Variables.registerGetter);
goog.exportProperty(Blockly.Variables, 'registerSetter', Blockly.Variables.registerSetter);
